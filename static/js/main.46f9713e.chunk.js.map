{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","WelcomeScreen.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","event","collapsed","handleClick","setState","this","props","className","summary","start","dateTime","timeZone","location","href","htmlLink","target","rel","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","errorText","updateNumberOfEvents","name","e","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","startsWith","done","navigator","onLine","data","getItem","JSON","parse","getAccessToken","token","url","axios","get","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","WelcomeScreen","showWelcomeScreen","align","src","alt","App","currentLocation","locationEvents","slice","eventCount","getData","number","city","split","shift","mounted","isTokenValid","ScatterChart","width","height","margin","top","right","bottom","left","CartesianGrid","XAxis","dataKey","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","fill","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","atatus","install"],"mappings":"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","file":"static/js/main.46f9713e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    event: {},\r\n    collapsed: true,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <div className=\"event\">\r\n        <h2 className=\"summary\">{event.summary}</h2>\r\n        <p className=\"start-date\">{event.start.dateTime} ({event.start.timeZone})</p>\r\n        <br />\r\n        <p className=\"location\">@{event.summary} | {event.location}</p>\r\n\r\n        {!collapsed &&\r\n          <div className={`extra-details ${this.state.collapsed ? \"hide\" : \"show\"}`}>\r\n            <h3>About Event</h3>\r\n            <a href={event.htmlLink} target='_blank' rel='noreferrer'>\r\n              See details on Google calendar\r\n            </a>\r\n            <p className=\"event-description\">{event.description}</p>\r\n\r\n          </div>\r\n        }\r\n        <button className={`${collapsed ? \"show\" : \"hide\"}-details-btn`} onClick={this.handleClick}>\r\n          {collapsed ? \"Show Details\" : \"Hide Details\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;","import React, { Component } from \"react\";\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert };\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ showSuggestions: true });\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        infoText: 'We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          placeholder=\"Enter a City\"\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}>\r\n              {suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked('all')}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\nimport { ErrorAlert } from \"./Alert\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    numberOfEvents: 32,\r\n    errorText: '',\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    if (value < 1 || value > 32) {\r\n      this.setState({\r\n        numberOfEvents: '',\r\n        errorText: 'Please enter a number between 1 and 32',\r\n      })\r\n    } else {\r\n      this.setState({\r\n        numberOfEvents: value,\r\n        errorText: '',\r\n      });\r\n    }\r\n    this.props.updateNumberOfEvents(event.target.value);\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n\r\n        <p><b>Number of Events:</b></p>\r\n        <input\r\n          type=\"number\"\r\n          name=\"number\"\r\n          className=\"number-of-events\"\r\n          value={this.props.numberOfEvents}\r\n          onChange={(e) => this.handleInputChanged(e)}\r\n        />\r\n        <ErrorAlert text={this.state.errorText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","const mockData = [\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n\r\n\r\n];\r\n\r\nexport { mockData };","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  /**\r\n   * Send access token to google API server\r\n   * If the token is valid, get a json response\r\n   * If the token is invalid, we get an error object\r\n   * If we get error, that checked by ' || tokenCheck.error '\r\n   * in the getAccessToken function. This would cause you to be \r\n   * sent to the auth screen to get a valid token.\r\n   */\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n}\r\n\r\nconst removeQuery = () => {\r\n  /**\r\n   * This function removes the code from the url\r\n   */\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      '//' +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState('', '', newurl);\r\n  } else {\r\n    newurl = window.location.protocol + '//' + window.location.host;\r\n    window.history.pushState('', '', newurl);\r\n  }\r\n}\r\n\r\nconst getToken = async (code) => {\r\n  /**\r\n   * Takes an access code and sends to the google API to \r\n   * exchange for an access token\r\n   */\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    `https://fo3jdyed01.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n}\r\n\r\nexport const getEvents = async () => {\r\n  /**\r\n   * We use mock data when we are testing on local,\r\n   * but use the real API data when we are live.\r\n   */\r\n  NProgress.start();\r\n  // Return mock data while testing\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n  // Checks if the user is offline, if so, last stored list is displayed\r\n  if (!navigator.onLine) {\r\n    const data = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return data ? JSON.parse(data).events : [];;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    //remove the code from the url once we are done with it\r\n    const url = `https://fo3jdyed01.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n      localStorage.setItem('locations', JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  /*Checks to see if user has a valid access token */\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n  /*If there is no valid access token, we need to get one */\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem('access_token');\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    /* There is no valid acces token, but we can check for a valid onw */\r\n    const code = await searchParams.get('code');\r\n    if (!code) {\r\n      /* There is no code, so redirect to my getAuthUrl endpoint */\r\n      const results = await axios.get(\r\n        \"https://fo3jdyed01.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\n\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ?\r\n    (\r\n      <div className=\"WelcomeScreen\">\r\n\r\n        <h1>Welcome to the MeetApp!</h1>\r\n        <h4>\r\n          Log In to See Upcoming Events Around the World for\r\n          Full-Stack\r\n          Developers\r\n        </h4>\r\n        <div className=\"button_cont\" align=\"center\">\r\n          <div className=\"google-btn\">\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"Google sign-in\"\r\n              />\r\n            </div>\r\n            <button onClick={() => { props.getAccessToken() }}\r\n              rel=\"nofollow noopener\"\r\n              className=\"btn-text\"\r\n            >\r\n              <b>Sign in with Google</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <a\r\n          href=\"https://ianrenas.github.io/meet/privacy.html\"\r\n          rel=\"nofollow noopener\"\r\n        >\r\n          Privacy Policy\r\n        </a>\r\n      </div>\r\n    )\r\n    : null\r\n}\r\nexport default WelcomeScreen;\r\n","import React, { Component } from 'react';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport './App.css';\nimport { InfoAlert } from './Alert';\nimport WelcomeScreen from './WelcomeScreen';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip\n} from 'recharts';\n\n\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    showWelcomeScreen: undefined,\n    currentLocation: 'all',\n    numberOfEvents: 32\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\n      true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events: events.slice(0, this.state.numberOfEvents), locations: extractLocations(events) });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n\n  updateEvents = async (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      const { numberOfEvents } = this.state;\n      this.setState({\n        events: locationEvents.slice(0, numberOfEvents)\n      });\n    });\n  }\n\n  updateNumberOfEvents = (eventCount) => {\n    const { currentLocation } = this.state;\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation, eventCount);\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n\n\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\n\n    return (\n      <div className=\"App\">\n        {!navigator.onLine ? (<InfoAlert text='You are offline!' />) : (<InfoAlert text=' ' />)}\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateNumberOfEvents={this.updateNumberOfEvents} />\n\n\n        <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20, right: 20, bottom: 20, left: 20\n          }}>\n          <CartesianGrid />\n          <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n          <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Scatter data={this.getData()} fill=\"#8884d8\" />\n        </ScatterChart>\n\n        <EventList events={this.state.events} />\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\n          getAccessToken={() => { getAccessToken() }} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\natatus.config('24cd2d25b98c4ceab041c9fd36352dff').install();"],"sourceRoot":""}